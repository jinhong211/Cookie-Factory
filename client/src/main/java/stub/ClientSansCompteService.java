
package stub;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.datatype.XMLGregorianCalendar;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "ClientSansCompteService", targetNamespace = "http://webService.demo.se.polytech.unice.fr/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface ClientSansCompteService {


    /**
     * 
     * @param recette
     * @param boutiques
     * @param compteId
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(name = "preferenceDansCompte", targetNamespace = "")
    @RequestWrapper(localName = "creerPreferenceCompte", targetNamespace = "http://webService.demo.se.polytech.unice.fr/", className = "stub.CreerPreferenceCompte")
    @ResponseWrapper(localName = "creerPreferenceCompteResponse", targetNamespace = "http://webService.demo.se.polytech.unice.fr/", className = "stub.CreerPreferenceCompteResponse")
    public boolean creerPreferenceCompte(
        @WebParam(name = "recette", targetNamespace = "")
        String recette,
        @WebParam(name = "boutiques", targetNamespace = "")
        String boutiques,
        @WebParam(name = "compteId", targetNamespace = "")
        int compteId);

    /**
     * 
     * @param date
     * @param addresseBoutique
     * @param recetteNom
     * @param quantite
     * @return
     *     returns double
     */
    @WebMethod
    @WebResult(name = "passerCommand", targetNamespace = "")
    @RequestWrapper(localName = "passerCommand", targetNamespace = "http://webService.demo.se.polytech.unice.fr/", className = "stub.PasserCommand")
    @ResponseWrapper(localName = "passerCommandResponse", targetNamespace = "http://webService.demo.se.polytech.unice.fr/", className = "stub.PasserCommandResponse")
    public double passerCommand(
        @WebParam(name = "addresseBoutique", targetNamespace = "")
        String addresseBoutique,
        @WebParam(name = "recetteNom", targetNamespace = "")
        String recetteNom,
        @WebParam(name = "date", targetNamespace = "")
        XMLGregorianCalendar date,
        @WebParam(name = "quantite", targetNamespace = "")
        int quantite);

    /**
     * 
     * @param ingredients
     * @param recetteNom
     * @param facons
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(name = "creerRecette", targetNamespace = "")
    @RequestWrapper(localName = "creerRecette", targetNamespace = "http://webService.demo.se.polytech.unice.fr/", className = "stub.CreerRecette")
    @ResponseWrapper(localName = "creerRecetteResponse", targetNamespace = "http://webService.demo.se.polytech.unice.fr/", className = "stub.CreerRecetteResponse")
    public boolean creerRecette(
        @WebParam(name = "recetteNom", targetNamespace = "")
        String recetteNom,
        @WebParam(name = "ingredients", targetNamespace = "")
        List<String> ingredients,
        @WebParam(name = "facons", targetNamespace = "")
        List<String> facons);

}
